const playwright = require("playwright-aws-lambda"); export default async (a, e) => { var t = null, i = [], s = []; const { query: l } = a; e.setHeader("Content-Type", "application/json"); var n = l.p; void 0 === n && (n = "110051"); var r = -1; switch (l.f) { case "covaxin": r = 4; break; case "covishield": r = 3; break; case "sputnik": r = 5; break; case "18": r = 1; break; case "45": r = 2; break; case "free": r = 6; break; case "paid": r = 7 }t = await playwright.launchChromium({ headless: !0, handleSIGINT: !1, handleSIGTERM: !1, handleSIGHUP: !1 }); const c = await t.newContext({ userAgent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36 OPR/68.0.3618.125" }), o = await c.newPage(); await o.route("**/*.{png,svg,jpg,jpeg,woff2,css}", a => a.abort()); try { await o.goto("https://www.cowin.gov.in/home"); var d = await o.waitForSelector('//*[@id="mat-input-0"]'); await d.type(n); var p = await o.$('//*[@class="pin-search-btn"]'); await p.click(); var w = await o.waitForSelector("div.mobile-hide"); if (-1 !== r) { var h = await w.waitForSelector("div:nth-child(1) > div:nth-child(1) > div:nth-child(" + r + ") > label:nth-child(2)"); await h.click() } await w.waitForSelector('div[class="row ng-star-inserted"]'); var v = await w.$$('div[class="row ng-star-inserted"]'); if (0 !== v.length) { var g, u; for (g = 0; g < v.length; g++) { var f = "UNKNOWN", N = "UNKNOWN", b = await v[g].$('h5[class="center-name-title"]'), m = await v[g].$('p[class="center-name-text"]'), k = await v[g].$('ul[class="slot-available-wrap"]'), x = await k.$$("li"), O = []; for (u = 0; u < x.length; u++) { var y = await o.evaluate(a => a.textContent, x[u]), S = "UNKNOWN", C = "UNKNOWN", I = y.toLowerCase(); -1 !== I.lastIndexOf("booked") && (C = S = "BOOKED", f = I.split("booked")[1].split("age")[0].replace(/ /g, ""), N = I.split("age ")[1]), -1 !== I.lastIndexOf(" na ") && (C = S = "Not Avaliable"), -1 !== I.lastIndexOf("d1") && (S = I.split("d1 ")[1].split(" ")[0], C = I.split("d2 ")[1].split(" ")[0], "UNKNOWN" === f && (f = I.split("d2 ")[1].split(C)[1].split("age")[0].replace(/ /g, ""), N = I.split("age ")[1])), O.push({ first_dose: S, second_dose: C }) } var K = clean(await o.evaluate(a => a.textContent, b)), W = clean(await o.evaluate(a => a.textContent, m)); s.push({ center_name: K, center_address: W, vaccine: f, age: N, sessions: O }) } i.push(s) } } catch (a) { var $ = a.message.toString(); -1 === $.lastIndexOf("Timeout 1000ms exceeded") && 0 != s.length || ($ = "no vaccine center available in this pincode"), i.push({ error: !0, message: $ }) } finally { await t.close(), e.status(200).send({ result: i }) } }; function clean(a) { var e = a.split(""); if (" " == e[0] && (a = a.replace(" ", "")), " " == e[e.length - 1]) { var t = a.split(" "), i = t[t.length - 2]; a = a.replace(" " + i + " ") } return a }